<!-- import不会引入目标文件import进去的template -->
<import src="../tpls/item.wxml" />
<!-- include引入目标文件除了template\wxs外的所有内容，相当于拷贝 -->
<include src="../tpls/header.wxml"/>
<!-- wxs 
    1. wxs不依赖运行时的基础库版本，可以在所有版本的小程序中运行；
    2. wxs与js是不同的语言
    3. wxs的运行环境和js代码是隔离的，wxs不能调用其他的js定义的函数（可以使用定义的变量），也不能调用小程序提供的api；
    4. wxs函数不能作为函数的事件回调；
-->
<wxs module="m1">
    var msg = 'hello wxs!';
    module.exports.message = msg;

    var getMax = function(array) {
        var max;
        for(var i = 0; i < array.length; i++) {
            max = max === undefined ? array[i] : (max >= array[i] ? max : array[i]);
        }
        return max;
    }
    module.exports.getMax = getMax;
</wxs>
<view>{{m1.message}}</view>
<view>{{m1.getMax(numArray)}}</view>
<wxs src="../wxs/tools.wxs" module="tools" />
<view>{{tools.msg}}</view>
<view>{{tools.bar(tools.FOO)}}</view>
<!-- 获取wxml节点信息-->
<view id="queryId">获取节点信息</view>
<navigator url="/pages/navbar/index">
    <button>navbar page</button>
</navigator>
<navigator url="/pages/navbar/index">
    <button>加购动效</button>
</navigator>
<template is="item" data="{{templateText: 'templateText'}}"/>
<!-- 事件:catch适用于子元素和父元素都有事件要执行 -->
<view id="outer" bindtap="handleTap1">
    outer view
    <view id="middle" catchtap="handleTap2">
        middle view
        <view id="inner" bindtap="handleTap3">
            inner view
        </view>
    </view>
</view>
<!-- 事件捕获: (capture) capture-bind或者capture-catch,使用capture-catch将中断捕获阶段和取消冒泡 -->
<view>{{text}}</view>
<view>{{array[0].msg}}</view>
<button bindtap="viewTap">click me</button>
<view>{{num}}</view>
<button bindtap="changeNum">change normal num</button>
<view>{{array[0].msg}}</view>
<button bindtap="changeItemInArray">change array data</button>
<map id="myMap" show-location/>
<view id="item-{{id}}">动态id</view>
<navigator url="/pages/address/index" hover-class="className">
    <view>to address</view>
</navigator>
<template name="msgItem">
    <view>
        <text>{{index}} : {{msg}}</text>
        <text>Time: {{time}}</text>
    </view>
</template>
<template is="msgItem" data="{{...item}}"/>
<template name="odd">
    <view>odd</view>
</template>
<template name="even">
    <view>even</view>
</template>
<block wx:for="{{[1, 2, 3, 4, 5]}}">
    <template is="{{item % 2 == 0 ? 'even' : 'odd'}}"/>
</block>
<!-- 不要直接写checked='true' -->
<checkbox checked="{{true}}"></checkbox>
<!-- 可以在{{}}中直接进行组合，构成新的对象或者数组 -->
<view wx:for="{{[zero, 1, 2, 3]}}">{{item}}</view> 
<view wx:for="{{array}}" wx:for-item="msgItem" wx:for-index="msgIndex">{{msgIndex}} : {{msgItem.msg}}</view>
<view wx:for="{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}" wx:for-item="i" wx:key="{{index}}">
    <view wx:for="{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}" wx:for-item="j">
        <view wx:if="{{i <= j}}">
            {{i}} * {{j}} = {{i * j}}
        </view>
    </view>
</view>